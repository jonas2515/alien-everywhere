# This file has been autogenerated by the pywayland scanner

# Copyright Â© 2012, 2013 Intel Corporation
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice (including the next
# paragraph) shall be included in all copies or substantial portions of the
# Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.

from __future__ import annotations


from pywayland.protocol_core import (
    Argument,
    ArgumentType,
    Global,
    Interface,
    Proxy,
    Resource,
)
from ..wayland import WlSurface
from .zwp_input_panel_surface_v1 import ZwpInputPanelSurfaceV1


class ZwpInputPanelV1(Interface):
    """Interface for implementing keyboards

    Only one client can bind this interface at a time.
    """

    name = "zwp_input_panel_v1"
    version = 1


class ZwpInputPanelV1Proxy(Proxy[ZwpInputPanelV1]):
    interface = ZwpInputPanelV1

    @ZwpInputPanelV1.request(
        Argument(ArgumentType.NewId, interface=ZwpInputPanelSurfaceV1),
        Argument(ArgumentType.Object, interface=WlSurface),
    )
    def get_input_panel_surface(self, surface: WlSurface) -> Proxy[ZwpInputPanelSurfaceV1]:
        """get_input_panel_surface

        :param surface:
        :type surface:
            :class:`~pywayland.protocol.wayland.WlSurface`
        :returns:
            :class:`~pywayland.protocol.input_method_unstable_v1.ZwpInputPanelSurfaceV1`
        """
        id = self._marshal_constructor(0, ZwpInputPanelSurfaceV1, surface)
        return id


class ZwpInputPanelV1Resource(Resource):
    interface = ZwpInputPanelV1


class ZwpInputPanelV1Global(Global):
    interface = ZwpInputPanelV1


ZwpInputPanelV1._gen_c()
ZwpInputPanelV1.proxy_class = ZwpInputPanelV1Proxy
ZwpInputPanelV1.resource_class = ZwpInputPanelV1Resource
ZwpInputPanelV1.global_class = ZwpInputPanelV1Global
